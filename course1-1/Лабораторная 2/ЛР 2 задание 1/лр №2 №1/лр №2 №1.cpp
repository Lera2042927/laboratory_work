// лр №2 №1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <cmath> // Для использования sin(), cos(), exp()

using namespace std;

//  для вычисления y от x
double f(double x) {
    if (x < -1) {
        return pow(x, exp(1)) * (sin(x) - cos(x)) / 2;
    }
    else if (x >= -1 && x <= 0) {
        return (exp(x) * cos(x) - 1) / 2;
    }
    else {
        return pow(x, 2) * sin(2 * x);
    }
}



    int main()
    {

        double a, b, h;
        setlocale(LC_ALL, "Russian");
        cout << "Лабораторная работа №2 задание №1" << endl;
        cout << "Вычислить: y=|(x*exp(x)*(sin(x)-cos(x)/2), если x<-1 ;" << endl;
        cout << "((exp(x)*cos(x)-z)/2), если x>=-1, x<=0;" << endl;
        cout << "pow(x,2)*sin2x, если x>0 " << endl;
        //граници интервала и шага
        cout << "Введите значение a (левая граница интервала): ";
        cin >> a;
        cout << "Введите значение b (правая граница интервала): ";
        cin >> b;
        cout << "Введите шаг h: ";
        cin >> h;

        //таблица
        cout << "x\t\ty\n";
        cout << "-----------------------\n";

        // проход интервала от a до b с шагом h
        for (double x = a; x <= b; x += h)
        {
            double y = f(x); // вычисление y для текущего x
            cout << x << "\t\t" << y << endl; //вывод x и y
        }

        return 0;
    }

/*#include <iostream>
#include <cmath> // Для использования sin(), cos(), exp()

using namespace std;

// Рекурсивная функция для вычисления y от x
double f(double x) {
    if (x < -1) {
        return pow(x, exp(1)) * (sin(x) - cos(x)) / 2;
    }
    else if (x >= -1 && x <= 0) {
        return (exp(x) * cos(x) - 1) / 2;
    }
    else {
        return pow(x, 2) * sin(2 * x);
    }
}

// Рекурсивная функция для вычисления y для всех x в интервале [a, b]
void calculateAndPrint(double a, double b, double h, double current) {
    if (current > b) {
        return; // Базовый случай: если текущий x превышает b, завершаем рекурсию
    }

    double y = f(current); // Вычисление y для текущего x
    cout << current << "\t\t" << y << endl; // Вывод x и y

    // Рекурсивный вызов для следующего значения x
    calculateAndPrint(a, b, h, current + h);
}

int main() {
    double a, b, h;
    setlocale(LC_ALL, "Russian");
    cout << "Лабораторная работа №2 задание №1" << endl;
    cout << "Вычислить: y=|(x*exp(x)*(sin(x)-cos(x)/2), если x<-1 ;" << endl;
    cout << "((exp(x)*cos(x)-1)/2), если x>=-1, x<=0;" << endl;
    cout << "pow(x,2)*sin(2*x), если x>0 " << endl;

    // Границы интервала и шаг
    cout << "Введите значение a (левая граница интервала): ";
    cin >> a;
    cout << "Введите значение b (правая граница интервала): ";
    cin >> b;
    cout << "Введите шаг h: ";
    cin >> h;

    // Таблица
    cout << "x\t\ty\n";
    cout << "-----------------------\n";

    // Начинаем рекурсивный процесс с начального значения a
    calculateAndPrint(a, b, h, a);

    return 0;
}*/



// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
