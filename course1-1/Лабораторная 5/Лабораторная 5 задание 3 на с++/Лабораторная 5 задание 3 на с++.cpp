// Лабораторная 5 задание 3 на с++.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include<iomanip>
using namespace std;
#define MAX_ARRAY 1000

// arr - исходный массив
// size - размер массива
// multiple - число, кратно которому нужно удалить
void removeMultiples(int*& arr, int& size, int multiple) // Удалить кратные значения; 
{
    int offset = 0; // счётчик некратных элементов

    // Копируем элементы, которые не кратны заданному числу
    for (int i = 0; i < size; i++)
    {   
        int value = arr[i];
        if ((value % multiple )!= 0) 
        {
            arr[offset] = value;
            offset++;
        }
    }

    // Обновляем указатель и размер
    size = offset;
}

int main()
{
    setlocale(LC_ALL, "Russian");
    cout << "Лабораторная работа №5 задание №3" << endl;
    cout << "Задан массив Х(N). Сначала удалить из него все элементы, кратные 3, затем 4, затем 5." << endl;
 
    int n;
    int min_limit;
    int max_limit;
    
    do {
        cout << "Введите размерность одномерного массива  \n";
        cin >> n;
        if (n > MAX_ARRAY)
            cout << "Размерность не может быть больше " << MAX_ARRAY << endl << endl;
    } while (n > MAX_ARRAY);

    do {
        cout << "Введите нижний предел одномерного массива \n";
        cin >> min_limit;
        cout << "Введите верхний предел одномерного массива \n";
        cin >> max_limit;
        if (min_limit >= max_limit)
            cout << "Минимальный лимит не может быть больше максимального лимита \n\n";
    } while (min_limit >= max_limit);
    int delta = max_limit - min_limit + 1;

    int* X = new int[n];

    for (unsigned int i = 0; i < n; i++)
    {
        X[i] = min_limit + rand() % delta; //диапазон
        cout << X[i] << " ";
    }
    cout << endl;

    // Вывод исходного массива
    cout << "Исходный массив: ";
    for (int i = 0; i < n; i++)
    {
        cout << X[i] << " ";
    }
    cout << endl;


   /* // Удаление элементов, кратных 3, 4 и 5
    removeMultiples(X, n, 3);
    removeMultiples(X, n, 4);
    removeMultiples(X, n, 5);*/

    // Вывод измененного массива
    //удаление элементов, кратных 3
    removeMultiples(X, n, 3);
    cout << "Массив после удаления элементов, кратных 3: ";
    for (int i = 0; i < n; i++) 
    {
        cout << X[i] << " ";
    }
    cout << endl;

    removeMultiples(X, n, 4);
    cout << "Массив после удаления элементов, кратных 4 : ";
    for (int i = 0; i < n; i++)
    {
        cout << X[i] << " ";
    }
    cout << endl;

    removeMultiples(X, n, 5);
    cout << "Массив после удаления элементов, кратных 5: ";
    for (int i = 0; i < n; i++)
    {
        cout << X[i] << " ";
    }
    cout << endl;


    // Освобождение памяти
    delete[] X;

    return 0;
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
