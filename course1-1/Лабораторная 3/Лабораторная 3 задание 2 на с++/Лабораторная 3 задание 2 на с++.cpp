// Лабораторная 3 задание 2 на с++.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#include<cmath>
#include<iomanip>
#include <iostream>
#include<cmath>
#include <vector>
using namespace std;
#define MAX_K_row 1000
#define MAX_L_column 1000

int B[MAX_K_row]; // Для положительных
int C[MAX_K_row]; // Для отрицательных
int arr_A[MAX_K_row][MAX_L_column];

int main()
{
	unsigned int k_row;
	unsigned int l_col;
	int min_limit;
	int max_limit;


	setlocale(LC_ALL, "Russian");
	cout << "Лабораторная работа №3 задание №2" << endl;
	cout << "Из двумерного массива A(k,l) сформировать вектор В(k)" << endl;
	cout << "каждый элемент которого равен количеству положительных элемментов соответствующей строки матрицы А" << endl;
	cout << "и вектор C(k), каждый элемент которого равен количеству отрицательных элементов соответствующей строки матрицы А" << endl;

	do {
		cout << "Введите количество строк двумерного массива  \n";
		cin >> k_row;
		if (k_row > MAX_K_row)
			cout << "Количество строк не может быть больше " << MAX_K_row << endl << endl;
	} while (k_row > MAX_K_row);

	do {
		cout << "Введите количество столбцов двумерного массива \n ";
		cin >> l_col;
		if (l_col > MAX_L_column)
			cout << "Количество столбцов не может быть больше " << MAX_L_column << endl << endl;
	} while (l_col > MAX_L_column);

	do {
		cout << "Введите нижний предел двумерного массива \n";
		cin >> min_limit;
		cout << "Введите верхний предел двумерного массива \n";
		cin >> max_limit;
		if (min_limit >= max_limit)
			cout << "Минимальный лимит не может быть больше максимального лимита \n\n";
	} while (min_limit >= max_limit);
	int delta = max_limit - min_limit + 1;

	srand(time(NULL));
	for (unsigned int i = 0; i < k_row; i++)
	{
		for (unsigned int j = 0; j < l_col; j++)
		{
			arr_A[i][j] = min_limit + rand() % delta; //диапазон
			cout << arr_A[i][j] << " ";


		}
		cout << endl;
	}
	cout << endl;

	


	// Подсчет положительных и отрицательных элементов
	for (unsigned int i = 0; i < k_row; i++) {
		for (unsigned int j = 0; j < l_col; j++) {
			if (arr_A[i][j] > 0) {
				B[i]++;
			}
			else if (arr_A[i][j] < 0) {
				C[i]++;
			}
		}
	}

	cout << "Количество положительных элементов в каждой строке:\n";
	for (unsigned int i = 0; i < k_row; ++i) {
		cout << "Строка " << i + 1 << ": " << B[i] << endl;
	}

	cout << "Количество отрицательных элементов в каждой строке:\n";
	for (unsigned int i = 0; i < k_row; ++i) {
		cout << "Строка " << i + 1 << ": " << C[i] << endl;
	}



	return 0;

}












// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
